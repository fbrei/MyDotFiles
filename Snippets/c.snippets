## Main functions
snippet main "Main function"
int main(int argc, const char** argv) {

	${1}

	return 0;
}
endsnippet

snippet mainn "Main function with no arguments"
int main(void) {

	${0}
	
	return 0;
}
endsnippet

## ================================================

## Function definitions

# no args
snippet fun0 "Function without arguments"
${1:void} ${2:fun}() {
	${3}
}
endsnippet

snippet dfun0 "Argumentless function with doc"
/**
 * \brief ${3:Brief description}
 *
 * ${4:Long description}
 * 
 * \return ${5:Return value, delete if void}
 */
${1:void} ${2:fun}();
$1 $2() ${6}{
	/* MOVE ME TO SOURCE FILE */
}
endsnippet

# -------------------------------------------------

# 1 arg
snippet fun1 "Function with one argument"
${1:void} ${2:fun}(${3:type} ${4:name}) {
	${5}
}
endsnippet

snippet dfun1 "Documented function with one argument"
/**
 * \brief ${5:Brief description}
 *
 * ${6:Long description}
 * 
 * \param $4 ${7:}
 * \return ${8:Return value, delete if void}
 */
${1:void} ${2:fun}(${3:type} ${4:name});
$1 $2($3 $4) ${9}{
	/* MOVE ME TO SOURCE FILE */
}
endsnippet


# -------------------------------------------------

# 2 arg
snippet fun2 "Function with two arguments"
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name}) {
	${7}
}
endsnippet

snippet dfun2 "Documented function with two arguments"
/**
 * \brief ${7:Brief description}
 *
 * ${8:Long description}
 * 
 * \param $4 ${9:}
 * \param $6 ${10:}
 * \return ${11:Return value, delete if void}
 */
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name});
$1 $2($3 $4, $5 $6) ${12}{
	/* MOVE ME TO SOURCE FILE */
}
endsnippet


# -------------------------------------------------

# 3 arg
snippet fun3 "Function with three arguments"
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name}, ${7:type} ${8:name}) {
	${9}
}
endsnippet

snippet dfun3 "Documented function with three arguments"
/**
 * \brief ${9:Brief description}
 *
 * ${10:Long description}
 * 
 * \param $4 ${11:}
 * \param $6 ${12:}
 * \param $8 ${13:}
 * \return ${14:Return value, delete if void}
 */
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name}, ${7:type} ${8:name});
$1 $2($3 $4, $5 $6, $7 $8) ${15}{
	/* MOVE ME TO SOURCE FILE */
}
endsnippet


# -------------------------------------------------

# 4 arg
snippet fun4 "Function with three arguments"
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name}, ${7:type} ${8:name}, ${9:type} ${10:name}) {
	${11}
}
endsnippet

snippet dfun4 "Documented function with three arguments"
/**
 * \brief ${11:Brief description}
 *
 * ${12:Long description}
 * 
 * \param $4 ${13:}
 * \param $6 ${14:}
 * \param $8 ${15:}
 * \param $10 ${16:}
 * \return ${17:Return value, delete if void}
 */
${1:void} ${2:fun}(${3:type} ${4:name}, ${5:type} ${6:name}, ${7:type} ${8:name}, ${9:type} ${10:name});
$1 $2($3 $4, $5 $6, $7 $8, $9 $10) ${18}{
	/* MOVE ME TO SOURCE FILE */
}
endsnippet


## ================================================

## Control structures

snippet for "For loop"
for(${1:int} ${2:ii} = ${3:0}; $2 < ${4:count}; $2${5:++}) {
	${6}
}
endsnippet

snippet rep "Repeat some commands count times"
for(size_t ii = 0; ii < ${1:count}; ii++) {
	${2}
}
endsnippet

snippet if "If without else"
if(${1:1}) {
	${2}
}
endsnippet

snippet ife "If with else branch"
if(${1:1}) {
	${2}
} else {
	${3}
}
endsnippet

snippet el "Else branch"
else {
	${1}
}
endsnippet

snippet elif "Else with if"
else if(${1:1}) {
	${2}
}
endsnippet

snippet wh "While loop"
while(${1:1}) {
	${2}
}
endsnippet


## ================================================

## Structs

snippet dtds2 "Typedef struct with doc"
/**
 * \brief ${8:Brief description}
 *
 * ${9:Long description}
 */
typedef struct {
	${2:type} ${3:name}; 		/**< ${4:description} */
	${5:type} ${6:name}; 		/**< ${7:description} */
} ${1:StructName};
endsnippet


snippet dtds3 "Typedef struct with doc"
/**
 * \brief ${11:Brief description}
 *
 * ${12:Long description}
 */
typedef struct {
	${2:type} ${3:name}; 		/**< ${4:description} */
	${5:type} ${6:name}; 		/**< ${7:description} */
	${8:type} ${9:name}; 		/**< ${10:description} */
} ${1:StructName};
endsnippet


snippet dtds4 "Typedef struct with doc"
/**
 * \brief ${14:Brief description}
 *
 * ${15:Long description}
 */
typedef struct {
	${2:type} ${3:name}; 		/**< ${4:description} */
	${5:type} ${6:name}; 		/**< ${7:description} */
	${8:type} ${9:name}; 		/**< ${10:description} */
	${11:type} ${12:name}; 		/**< ${13:description} */
} ${1:StructName};
endsnippet


snippet dtds5 "Typedef struct with doc"
/**
 * \brief ${17:Brief description}
 *
 * ${18:Long description}
 */
typedef struct {
	${2:type} ${3:name}; 		/**< ${4:description} */
	${5:type} ${6:name}; 		/**< ${7:description} */
	${8:type} ${9:name}; 		/**< ${10:description} */
	${11:type} ${12:name}; 		/**< ${13:description} */
	${14:type} ${15:name}; 		/**< ${16:description} */
} ${1:StructName};
endsnippet


## ================================================

## General shortcuts

snippet sz "sizeof" i
sizeof(${1})
endsnippet

snippet ma "Malloc"
malloc(${1});
endsnippet

snippet mas "Malloc with sizeof"
malloc(${1:length} * sizeof(${2}));
endsnippet

snippet cas "Calloc with sizeof"
calloc(${1:length}, sizeof(${2}));
endsnippet

snippet fr "Free"
free(${1});
endsnippet

snippet fh "Inserts a file header" b
/**
 *	\file ${1:`!v expand('%:t')`}
 *  \brief ${2:Brief description}
 *
 *	${3:Long description}
 *
 *	\date ${4:`date +%Y/%m/%d`}
 *	\author ${5:Felix Brei}
 *
 *	\bug ${6:No known bugs.}
 */
endsnippet
